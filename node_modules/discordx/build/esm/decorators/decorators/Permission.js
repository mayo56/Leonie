import { Modifier } from "@discordx/internal";
import { DApplicationCommand, DDiscord, DefaultPermissionResolver, DSimpleCommand, MetadataStorage, } from "../../index.js";
export function Permission(permission) {
    return function (target, key, descriptor) {
        const isDefaultPermission = typeof permission === "boolean" ||
            permission instanceof DefaultPermissionResolver;
        const isArray = permission instanceof Array;
        MetadataStorage.instance.addModifier(Modifier.create((original) => {
            if (isDefaultPermission) {
                original.defaultPermission = permission;
            }
            else if (isArray) {
                original.permissions = [...original.permissions, ...permission];
            }
            else {
                original.permissions = [...original.permissions, permission];
            }
            if (original instanceof DDiscord) {
                [
                    ...original.applicationCommands,
                    ...original.simpleCommands,
                ].forEach((obj) => {
                    if (isDefaultPermission) {
                        obj.defaultPermission = permission;
                    }
                    else if (isArray) {
                        obj.permissions = [...obj.permissions, ...permission];
                    }
                    else {
                        obj.permissions = [...obj.permissions, permission];
                    }
                });
            }
        }, DApplicationCommand, DSimpleCommand, DDiscord).decorateUnknown(target, key, descriptor));
    };
}
//# sourceMappingURL=Permission.js.map