import { Modifier } from "@discordx/internal";
import { DApplicationCommandOption, DApplicationCommandOptionChoice, MetadataStorage, } from "../../index.js";
export function SlashChoice(name, value) {
    return function (target, key, index) {
        MetadataStorage.instance.addModifier(Modifier.create((original) => {
            if (typeof name === "string" || typeof name === "number") {
                original.choices = [
                    ...original.choices,
                    DApplicationCommandOptionChoice.create(name.toString(), value ? value : name),
                ];
            }
            else {
                const allChoices = Object.keys(name).map((subKey) => {
                    return DApplicationCommandOptionChoice.create(subKey, name[subKey] ?? "undefined");
                });
                original.choices = [...original.choices, ...allChoices];
            }
        }, DApplicationCommandOption).decorate(target.constructor, key, target[key], target.constructor, index));
    };
}
//# sourceMappingURL=SlashChoice.js.map