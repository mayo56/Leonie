"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permission = void 0;
const internal_1 = require("@discordx/internal");
const index_js_1 = require("../../index.js");
function Permission(permission) {
    return function (target, key, descriptor) {
        const isDefaultPermission = typeof permission === "boolean" ||
            permission instanceof index_js_1.DefaultPermissionResolver;
        const isArray = permission instanceof Array;
        index_js_1.MetadataStorage.instance.addModifier(internal_1.Modifier.create((original) => {
            if (isDefaultPermission) {
                original.defaultPermission = permission;
            }
            else if (isArray) {
                original.permissions = [...original.permissions, ...permission];
            }
            else {
                original.permissions = [...original.permissions, permission];
            }
            if (original instanceof index_js_1.DDiscord) {
                [
                    ...original.applicationCommands,
                    ...original.simpleCommands,
                ].forEach((obj) => {
                    if (isDefaultPermission) {
                        obj.defaultPermission = permission;
                    }
                    else if (isArray) {
                        obj.permissions = [...obj.permissions, ...permission];
                    }
                    else {
                        obj.permissions = [...obj.permissions, permission];
                    }
                });
            }
        }, index_js_1.DApplicationCommand, index_js_1.DSimpleCommand, index_js_1.DDiscord).decorateUnknown(target, key, descriptor));
    };
}
exports.Permission = Permission;
//# sourceMappingURL=Permission.js.map