"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlashGroup = void 0;
const internal_1 = require("@discordx/internal");
const index_js_1 = require("../../index.js");
function SlashGroup(options, root) {
    return function (target, key, descriptor) {
        if (typeof options === "string") {
            // If @SlashGroup decorate a method edit the method and add it to subgroup
            index_js_1.MetadataStorage.instance.addModifier(internal_1.Modifier.create((original) => {
                if (original instanceof index_js_1.DDiscord) {
                    [...original.applicationCommands].forEach((obj) => {
                        obj.group = root ?? options;
                        obj.subgroup = root ? options : undefined;
                    });
                }
                else {
                    original.group = root ?? options;
                    original.subgroup = root ? options : undefined;
                }
            }, index_js_1.DApplicationCommand, index_js_1.DDiscord).decorateUnknown(target, key, descriptor));
        }
        else {
            const myClass = target;
            if (options.root) {
                index_js_1.MetadataStorage.instance.addApplicationCommandSlashSubGroups(index_js_1.DApplicationCommandGroup.create(options.name, { description: options.description }).decorate(myClass, myClass.name));
            }
            else {
                index_js_1.MetadataStorage.instance.addApplicationCommandSlashGroups(index_js_1.DApplicationCommandGroup.create(options.name, {
                    description: options.description,
                }).decorate(myClass, key ?? myClass.name));
            }
        }
    };
}
exports.SlashGroup = SlashGroup;
//# sourceMappingURL=SlashGroup.js.map