import type { ParameterDecoratorEx } from "@discordx/internal";
import type { NotEmpty, SlashChoiceType } from "../../index.js";
/**
 * The slash command option can implement autocompletion for string and number types
 *
 * @param name - Choice name/value
 * ___
 *
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 *
 * @category Decorator
 */
export declare function SlashChoice<T extends string>(name: NotEmpty<T>): ParameterDecoratorEx;
/**
 * The slash command option can implement autocompletion for string and number types
 *
 * @param name - Choice name/value
 * ___
 *
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 *
 * @category Decorator
 */
export declare function SlashChoice(name: number): ParameterDecoratorEx;
/**
 * The slash command option can implement autocompletion for string and number types
 *
 * @param name - Choice name
 * @param value - Choice value
 * ___
 *
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 *
 * @category Decorator
 */
export declare function SlashChoice<T extends string>(name: NotEmpty<T>, value: number): ParameterDecoratorEx;
/**
 * The slash command option can implement autocompletion for string and number types
 *
 * @param name - Choice name
 * @param value - Choice value
 * ___
 *
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 *
 * @category Decorator
 */
export declare function SlashChoice<T extends string, V extends string>(name: NotEmpty<T>, value: NotEmpty<V>): ParameterDecoratorEx;
export declare function SlashChoice(choices: SlashChoiceType): ParameterDecoratorEx;
