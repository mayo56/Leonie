"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleCommandOption = void 0;
const internal_1 = require("@discordx/internal");
const index_js_1 = require("../../index.js");
function SimpleCommandOption(name, options) {
    function getType(type) {
        switch (type) {
            case "STRING": {
                return index_js_1.SimpleCommandOptionType.String;
            }
            case "NUMBER": {
                return index_js_1.SimpleCommandOptionType.Number;
            }
            case "BOOLEAN": {
                return index_js_1.SimpleCommandOptionType.Boolean;
            }
            case "CHANNEL":
            case "TEXTCHANNEL":
            case "VOICECHANNEL": {
                return index_js_1.SimpleCommandOptionType.Channel;
            }
            case "GUILDMEMBER": {
                return index_js_1.SimpleCommandOptionType.User;
            }
            case "ROLE": {
                return index_js_1.SimpleCommandOptionType.Role;
            }
            case "USER":
            case "GUILDMEMBER": {
                return index_js_1.SimpleCommandOptionType.User;
            }
            default:
                throw Error(`Invalid simple command option (${name}): ${type}\n`);
        }
    }
    return function (target, key, index) {
        const dType = Reflect.getMetadata("design:paramtypes", target, key)[index].name.toUpperCase();
        const type = options?.type ?? getType(dType);
        const option = index_js_1.DSimpleCommandOption.create(name, type, options?.description).decorate(target.constructor, key, target[key], target.constructor, index);
        index_js_1.MetadataStorage.instance.addModifier(internal_1.Modifier.create((original) => {
            original.options = [...original.options, option];
        }, index_js_1.DSimpleCommand).decorate(target.constructor, key, target[key], target.constructor, index));
        index_js_1.MetadataStorage.instance.addSimpleCommandOption(option);
    };
}
exports.SimpleCommandOption = SimpleCommandOption;
//# sourceMappingURL=SimpleCommandOption.js.map