/* eslint-disable @typescript-eslint/no-explicit-any */
import { DecoratorUtils } from "../util.js";
/**
 * @category Decorator
 */
export class Decorator {
    _classRef;
    _from;
    _key;
    _method;
    _index = undefined;
    get index() {
        return this._index;
    }
    get classRef() {
        return this._classRef;
    }
    set classRef(value) {
        this._classRef = value;
        this.from = value;
    }
    get from() {
        return this._from;
    }
    set from(value) {
        this._from = value;
    }
    get key() {
        return this._key;
    }
    get method() {
        return this._method;
    }
    get isClass() {
        return !!this._method;
    }
    constructor() {
        // protected constructor
    }
    decorateUnknown(classRef, key, method, index) {
        const decorateAClass = DecoratorUtils.decorateAClass(method) && index === undefined;
        const finalClassRef = decorateAClass
            ? classRef
            : classRef.constructor;
        const finalKey = decorateAClass ? finalClassRef.name : key;
        const finalMethod = decorateAClass ? finalClassRef : method?.value;
        return this.decorate(finalClassRef, finalKey, finalMethod, finalClassRef, index);
    }
    decorate(classRef, key, method, from, index) {
        this._from = from ?? classRef;
        this._classRef = classRef;
        this._key = key;
        this._method = method;
        this._index = index;
        return this;
    }
}
//# sourceMappingURL=Decorator.js.map