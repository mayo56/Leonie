"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modifier = void 0;
const Decorator_js_1 = require("./Decorator.js");
const util_js_1 = require("../util.js");
/**
 * @category Internal
 */
class Modifier extends Decorator_js_1.Decorator {
    _toModify;
    _modifyTypes;
    constructor(toModify, modifyTypes) {
        super();
        this._toModify = toModify;
        this._modifyTypes = modifyTypes;
    }
    static create(toModify, ...modifyTypes) {
        return new Modifier(toModify, modifyTypes);
    }
    /**
     * Apply the modifier to a list of objects
     * it only applies the modifications to linked objects
     * that are on the targets type of modification
     * @param modifiers The modifier list
     * @param originals The list of objects to modify
     * @returns
     */
    static applyFromModifierListToList(modifiers, originals) {
        return Promise.all(modifiers.map(async (modifier) => {
            // Get the list of objects that are linked to the specified modifier
            let linked = util_js_1.DecoratorUtils.getLinkedObjects(modifier, originals);
            // Filter the linked objects to match the target types of modification
            linked = linked.filter((l) => modifier._modifyTypes.includes(l.constructor));
            // Apply the modifications
            await Promise.all(linked.map((linkedOriginal) => {
                return modifier.applyModifications(linkedOriginal);
            }));
        }));
    }
    applyModifications(original) {
        return this._toModify(original);
    }
}
exports.Modifier = Modifier;
//# sourceMappingURL=Modifier.js.map